ex:1) Java program to demonstrate Unboxing
Solution:
import java.util.ArrayList;
  class Unboxing
   {
    public static void main(String[] args)
   {
   Character ch = 'a';
// unboxing - Character object to primitive conversion
    char a = ch;
ArrayList<Integer> arrayList = new ArrayList<Integer>();
     arrayList.add(24);
// unboxing because get method returns an Integer object
     int num = arrayList.get(0);
// printing the values from primitive data types
     System.out.println(num);
}
}
Output:24

ex:2) // JVM to run Garbage Collector
public class Test {
	public static void main(String[] args) throws InterruptedException {
		Test t1 = new Test();
		Test t2 = new Test();
// Nullifying the reference variable
		t1 = null;
// requesting JVM for running Garbage Collector
		System.gc();
// Nullifying the reference variable
		t2 = null;
// requesting JVM for running Garbage Collector
		Runtime.getRuntime().gc();
	}
@ Override
// finalize method is called on object once
// before garbage collecting it
	protected void finalize() throws Throwable {
		System.out.println("Garbage collector called");
		System.out.println("Object garbage collected : " + this);
	}
}
 
 Output:Garbage collector called

